<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>golang on Carson Blog</title><link>https://carsonslovoka.github.io/pg_lang/golang/</link><description>Recent content in golang on Carson Blog</description><generator>Hugo -- gohugo.io</generator><copyright>Carson 2020-</copyright><lastBuildDate>Thu, 06 May 2021 09:36:35 +0800</lastBuildDate><atom:link href="https://carsonslovoka.github.io/pg_lang/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>Go Regex</title><link>https://carsonslovoka.github.io/pg_lang/golang/go-regex/</link><pubDate>Thu, 22 Apr 2021 11:03:27 +0800</pubDate><guid>https://carsonslovoka.github.io/pg_lang/golang/go-regex/</guid><description>正規式引擎Engine Name Desc golang是使用這個，re2.wiki PCRE PCRE (Perl Compatible Regular Expressions) regex online website Name Desc regex101 很推這個，</description></item><item><title>Go Awesome</title><link>https://carsonslovoka.github.io/pg_lang/golang/go-awesome/</link><pubDate>Thu, 01 Apr 2021 13:36:29 +0800</pubDate><guid>https://carsonslovoka.github.io/pg_lang/golang/go-awesome/</guid><description>awesome-go Name Desc 幫您整理了很多資料，您可以在裡面搜尋到特殊領域相關所推薦的套件 範例: mnist 範例: iris 鳶尾花 net/h</description></item><item><title>Go Interface</title><link>https://carsonslovoka.github.io/pg_lang/golang/go-interface/</link><pubDate>Mon, 15 Mar 2021 10:03:39 +0800</pubDate><guid>https://carsonslovoka.github.io/pg_lang/golang/go-interface/</guid><description>Interface的範例 http.Handler &amp;amp; http.HandlerFunc 以下的代碼都是在 net.http.server.go func StripPrefix(prefix string, h Handler) Handler { // ... return HandlerFunc(func(w ResponseWriter, r *Request) { // ... }) } 可以看到Str</description></item><item><title>Go Test</title><link>https://carsonslovoka.github.io/pg_lang/golang/go-test/</link><pubDate>Wed, 10 Mar 2021 10:59:27 +0800</pubDate><guid>https://carsonslovoka.github.io/pg_lang/golang/go-test/</guid><description>golang測試教學 通常我們會創建一個和您的package檔案同名的檔案名稱後面加上_test 例如:</description></item><item><title>go-admin</title><link>https://carsonslovoka.github.io/pg_lang/golang/go-admin/</link><pubDate>Fri, 26 Feb 2021 18:45:47 +0800</pubDate><guid>https://carsonslovoka.github.io/pg_lang/golang/go-admin/</guid><description>前言 前言之前寫了一個舊內容主要是在談go的版本比較新會裝不起來， 但後來我又用新的版本再從裝，就沒發現</description></item><item><title>將go代碼發佈到github上去</title><link>https://carsonslovoka.github.io/pg_lang/golang/go-publish2github/</link><pubDate>Tue, 26 Jan 2021 17:43:12 +0800</pubDate><guid>https://carsonslovoka.github.io/pg_lang/golang/go-publish2github/</guid><description>前言 在閱讀前，請一定要弄懂 go mod應用 或者 Using Go Modules 本篇主要就是造官方的教學，講解2-5 Part 1 — Using Go Modules Part 2</description></item><item><title>Golang Module</title><link>https://carsonslovoka.github.io/pg_lang/golang/go-mod/</link><pubDate>Fri, 22 Jan 2021 16:57:58 +0800</pubDate><guid>https://carsonslovoka.github.io/pg_lang/golang/go-mod/</guid><description>前言 雖然標題叫做OOP但是您看完後可能會覺得關物件導向什麼事&amp;hellip; 這是因為和當初計畫不同所</description></item><item><title>golang基礎教學</title><link>https://carsonslovoka.github.io/pg_lang/golang/go-tutorial/</link><pubDate>Thu, 14 Jan 2021 10:39:00 +0800</pubDate><guid>https://carsonslovoka.github.io/pg_lang/golang/go-tutorial/</guid><description>下載 途徑一: choco 如果您想要choco可以參考: 請參考: 套件安裝-常用安裝項目-golang 途徑二: 官方</description></item></channel></rss>